@using Microsoft.Extensions.Options;
@using Volo.Abp.AspNetCore.Mvc.UI.Components.LayoutHook
@using Volo.Abp.AspNetCore.Mvc.UI.Layout
@using Volo.Abp.AspNetCore.Mvc.UI.Theming
@using Volo.Abp.Ui.Branding;
@using Volo.Abp.AspNetCore.Mvc.AntiForgery

@using Simple.Abp.Articles.Web.Theme.Cactus
@using Simple.Abp.Articles.Web.Theme.Cactus.Components.Header
@using Simple.Abp.Articles.Web.Theme.Cactus.Components.Footer
@using Simple.Abp.Articles.Web.Theme.Cactus.Components.Styles
@using Simple.Abp.Articles.Web.Theme.Cactus.Components.Scripts

@inject IAbpAntiForgeryManager AbpAntiForgeryManager
@inject IBrandingProvider BrandingProvider
@inject IPageLayout PageLayout
@inject IOptions<CactusOptions> Options
@{
    Layout = null;
    AbpAntiForgeryManager.SetCookie();

    ViewBag.CdnHost = Options.Value.CdnHost;

    var pageTitle = ViewBag.Title == null ? BrandingProvider.AppName : ViewBag.Title; //TODO: Discard to get from Title
    if (PageLayout.Content.Title != null)
    {
        if (!string.IsNullOrWhiteSpace(pageTitle))
        {
            pageTitle = " | " + pageTitle;
        }

        pageTitle = PageLayout.Content.Title + pageTitle;
    }
}

<!DOCTYPE html>
<html lang="@CultureInfo.CurrentCulture.Name">
<head>
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.First, StandardLayouts.Application)
    <!-- so meta -->
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="HandheldFriendly" content="True">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
    <meta name="description" content="@ViewBag.Content">

    <link rel="shortcut icon" href="/favicon.ico">
    <link rel="icon" type="image/png" href="/logo.png" sizes="192x192">
    <link rel="apple-touch-icon" sizes="180x180" href="/logo.png">
    <title>@pageTitle</title>

    <abp-style src="/libs/cactus/css/account.css"/>
    @await RenderSectionAsync("styles", false)

    @await Component.InvokeLayoutHookAsync(LayoutHooks.Head.Last, StandardLayouts.Application)
</head>

<body class="max-width mx-auto px3 ltr">
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.First, StandardLayouts.Application)

    @RenderBody()

    @await RenderSectionAsync("scripts", false)
    @await Component.InvokeLayoutHookAsync(LayoutHooks.Body.Last, StandardLayouts.Application)
</body>
</html>


